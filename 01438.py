import heapq


class Solution:
    def longestSubarray2(self, nums: list[int], limit: int) -> int:
        longest = -1
        for ii in range(len(nums)):
            for jj in range(ii+1, len(nums)+1):
                if self.absolute_diff(nums[ii:jj]) <= limit:
                    if longest < jj - ii:
                        longest = jj - ii

        return longest

    def absolute_diff(self, nums):
        return max(nums) - min(nums)

    def longestSubarray3(self, nums: list[int], limit: int) -> int:
        # Example: [10,1,2,4,7,4,3,1], limit = 5
        dqMax, dqMin = [], []
        ans = l = 0
        for r in range(len(nums)):
            while dqMax and nums[dqMax[-1]] <= nums[r]:  # Keep dqMax decreasing
                dqMax.pop()
            while dqMin and nums[dqMin[-1]] >= nums[r]:  # Keep dqMin increasing
                dqMin.pop()
            dqMax.append(r)
            dqMin.append(r)
            
            # While current sub-array has difference between the largest and the smallest large than `limit`
            while nums[dqMax[0]] - nums[dqMin[0]] > limit:
                l += 1  # Shrink size by moving the left pointer
                if dqMax[0] < l: dqMax.pop(0)
                if dqMin[0] < l: dqMin.pop(0)
            ans = max(ans, r - l + 1)
            
        return ans

    def longestSubarray(self, nums, limit):
        maxq, minq = [], []
        res = left = 0
        for right, n in enumerate(nums):
            heapq.heappush(maxq, [-n, right]) # max heap
            heapq.heappush(minq, [n, right]) # min heap
            while -maxq[0][0] - minq[0][0] > limit:
                left = min(maxq[0][1], minq[0][1]) + 1
                while maxq[0][1] < left: heapq.heappop(maxq)
                while minq[0][1] < left: heapq.heappop(minq)
            res = max(res, right - left + 1)
        return res

def main():
    s = Solution()
    nums = [8,2,4,7] 
    limit = 4
    print(s.longestSubarray(nums, limit))
    
    nums = [10,1,2,4,7,2]
    limit = 5
    print(s.longestSubarray(nums, limit))

    nums = [4,2,2,2,4,4,2,2]
    limit = 0
    print(s.longestSubarray(nums, limit))

    nums = [5772,9909,6522,8397,9259,2808,5341,8686,1155,816,249,9429,4881,1629,7383,1428,11,780,4607,8991,4998,9690,4169,7515,6279,1921,3662,5016,2059,8352,8217,395,5998,7313,1547,7061,2545,4503,1866,6115,4135,3458,5383,2309,9146,3654,122,3770,7906,5880,2085,6692,5620,7004,7209,1834,4102,869,8641,4839,8441,5222,3262,3412,3759,3966,6163,5686,4202,25,8064,8304,2303,7008,7926,1482,8462,4523,1638,3593,1777,6982,6637,2330,1880,7203,8488,3546,2643,3530,4466,5992,5350,5691,4126,9288,2447,509,3627,4215,7900,9765,8782,262,5603,275,2860,3292,4253,3770,1198,6982,6047,6068,3106,1730,75,6428,5556,9391,5404,6724,5621,9643,4217,6596,4520,5788,1230,7165,3655,7734,5672,4634,480,1740,9744,8702,882,2803,3692,8774,7198,4815,6936,6529,75,1115,6503,2503,9618,3403,7769,6452,8090,1620,6720,2704,8075,3522,5060,9135,593,4896,4801,2275,4114,8427,4979,7799,2186,7151,5464,8543,5263,3456,4553,651,5089,8232,9417,4828,8147,4900,4329,2617,4748,4312,5473,2442,4242,6345,7241,8109,2761,6285,649,1520,9550,3371,5194,838,8568,5005,658,6808,1783,5308,2118,171,5643,3956,5806,8506,7120,3946,8525,1371,536,5488,312,7268,428,2761,4605,3432,7027,4740,2703,720,638,8147,6396,8871,1827,6226,4717,7146,818,3754,5467,6870,9632,9434,7978,9830,3329,9495,8379,1458,5515,6630,2939,3858,8473,7952,1184,6866,6476,3575,4189,26,4619,534,4261,1398,2946,4140,7354,7123,5005,1645,4871,884,7819,2877,4169,8992,3421,2066,691,6542,9025,163,9293,8246,4868,45,6254,5569,1587,4208,2654,9795,3276,1190,2865,9462,6180,8697,9286,382,3610,6655,293,70,8647,6811,2880,875,6485,6790,3128,2608,3639,1501,7405,8848,8920,5480,4099,3143,8307,9763,4191,6367,4054,4792,4224,2411,4358,5926,9477,4515,8197,3587,3102,8800,360,1727,3582,4517,2765,5277,3599,2668,538,9970,3591,6356,4289,4220,3478,4282,6153,685,541,2521,8144,7153,4938,6006,6647,5834,3244,4696,4592,4330,7919,2502,9505,5843,2319,6386,1003,1184,4264,1235,8088,3411,7436,5039,660,4406,5524,71,8117,7069,7068,6941,6007,9971,7962,3172,7087,6416,4739,1575,1326,2640,5525,5986,9314,7036,6259,2017,6168,851,7107,9963,3295,1847,3756,7827,6286,2833,2181,3607,1571,5684,5295,8287,7201,2732,6200,7934,9229,3019,613,8252,3252,4096,2152,1958,4485,9126,215,81,6094,4678,3517,892,5109,2426,2088,1104,2563,9658,6850,4398,2142,1196,3168,2633,9864,6829,3549,6433,8865,8032,2837,9884,1056,8168,3978,3341,1193,2485,4007,3102,9997,2414,8984,4253,1070,9406,6098,1293,5825,8656,4568,2938,9289,7696,7104,9123,9433,9176,3617,2067,9076,9651,1926,7136,7023,6025,3669,7271,9212,6419,5449,9294,3005,858,799,6018,7592,2647,7646,9387,6115,5769,2560,7494,3293,8952,7820,8782,4624,9795,3409,2081,9979,3611,4632,1734,1443,3719,6954,8390,3510,4927,8065,1011,6155,3343,876,5063,4906,3454,7024,205,7483,5335,6877,3998,1725,2763,8281,836,6262,2670,283,8429,8126,7951,6043,8999,6989,472,9731,7143,6377,3892,8486,134,9172,708,3273,5171,586,2210,7188,2925,7407,2399,2353,4123,8258,6259,1522,8396,2023,1163,6284,7929,6007,3450,617,8681,6707,3614,7882,3239,2767,3879,3230,8686,5548,4894,7823,9412,8289,3854,3491,4614,2020,9338,168,601,5168,1458,8656,2926,7474,8860,1319,6714,2299,8914,711,2297,5238,5877,7406,3122,6559,7596,1408,6461,5995,161,4672,3467,9576,5834,6136,123,1555,7297,6641,5025,2840,4902,3593,5407,5447,3471,671,835,305,2982,9849,7577,5313,602,4358,9727,8609,4449,1079,4095,195,2131,6772,5693,4424,8167,640,6321,1816,5002,6869,4067,3759,8486,9560,7144,9291,4326,171,96,2483,7782,2444,5736,1272,9797,4055,9125,9016,2529,2175,6571,2275,5410,3184,2122,2243,9962,1909,2085,548,9764,4559,4474,5775,122,2382,143,1045,7475,7092,6515,5070,2191,6418,6981,5899,7339,5732,4791,7786,3042,4407,131,5104,3768,871,8184,978,124,1297,9731,7590,42,4022,2171,6424,6365,3646,9725,4536,3004,3575,2647,1485,5413,5684,1412,1999,9114,3781,3354,5384,9178,8789,7340,1357,7068,9366,5839,2705,2968,1666,5805,3027,8082,1299,7473,7068,3583,1039,1110,4124,5379,6424,6036,9529,5348,7051,8465,9809,1159,3117,6745,5696,8631,8147,5679,1956,7331,5396,143,3691,4983,6732,2293,3138,4557,8340,758,2660,9504,5080,934,1823,4354,9657,1830,2945,9146,7409,9337,4061,7677,7061,895,2309,8075,5896,8242,4781,6151,1459,9273,7162,2128,8338,3821,7013,7976,1027,9679,5927,8718,8531,3033,1016,3343,3106,305,5687,3894,3913,8633,8626,6730,9148,6800,2707,3846,13,3599,8363,8728,930,2546,8991,1479,405,2332,8923,4366,3762,5912,5449,2258,1537,4192,6761,5827,9730,696,8987,1019,7509,620,5153,5102,4919,6385,5027,6307,7905,4828,1965,9586,186,1733,6947,1206,3418,2017,155,4025,7688,1162,3485,5585,3520,4851,4682,7621,7621,9148,9391,8347,3448,7584,6169,1369,506,1209,4930,7363,3357,4838,6789,3031,9941,6467,6145,7587,3627,4042,8089,231,4795,4397,7769,8086,5768,1794,9719,1965,3508,7316,6358,3523,6900,1011,2884,6333,6965,6121,8612,2322,1114,8385,2618,737,9539,3476,8238,8906,7624,5080,4931,7791,2208,345,7393,7106,9482,5654,7139,5953,3570,4428,3332,7556,9457,7763,4447,6807,4662,4538,7272,1079,1822,5329,7336,4707,8502,3718,8341,5247,4068,2541,2573,4167,4066,6747,495,7034]
    limit = 6405
    print(s.longestSubarray(nums, limit))

if __name__ == '__main__':
    main()
